name: library

services:
  
  spanner:
   image: gcr.io/cloud-spanner-emulator/emulator:latest
   network_mode: host
   ports:
       - "9010:9010"
       - "9020:9020"

  gcloud-spanner-init:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    network_mode: host
    command: >
     bash -c 'gcloud config configurations create emulator &&
             gcloud config set auth/disable_credentials true &&
             gcloud config set project $${PROJECT_ID} &&
             gcloud config set api_endpoint_overrides/spanner $${SPANNER_EMULATOR_URL} &&
             gcloud spanner instances create $${INSTANCE_NAME} --config=emulator-config --description=Emulator --nodes=1'
    environment:
      PROJECT_ID: "test-project"
      SPANNER_EMULATOR_URL: "http://localhost:9020/"
      INSTANCE_NAME: "test-instance"
      DATABASE_NAME: "test-database"

  wrench-create:
    image: ghcr.io/cloudspannerecosystem/wrench:1.10.1
    command: "create --directory /ddl"
    network_mode: host
    environment:
      SPANNER_PROJECT_ID: "test-project"
      SPANNER_INSTANCE_ID: "test-instance"
      SPANNER_DATABASE_ID: "test-database"
      SPANNER_EMULATOR_HOST: "localhost:9010"
      SPANNER_EMULATOR_URL: "http://localhost:9020/"
    volumes:
      - ./migrations/ddl:/ddl
    restart: on-failure
  
  wrench-apply:
    image: ghcr.io/cloudspannerecosystem/wrench:1.10.1
    network_mode: host
    command: "apply --dml /dml/dml.sql"
    environment:
      SPANNER_PROJECT_ID: "test-project"
      SPANNER_INSTANCE_ID: "test-instance"
      SPANNER_DATABASE_ID: "test-database"
      SPANNER_EMULATOR_HOST: "localhost:9010"
      SPANNER_EMULATOR_URL: "http://localhost:9020/"
    volumes:
      - ./migrations/dml:/dml
    restart: on-failure

  database-acl:
    restart: on-failure
    container_name: database-acl
    build: ./database-acl/
    network_mode: host
    ports:
      - "50051:50051"
    environment:
      - DB_USER=postgres
      - DB_HOST=localhost
      - DB_PWD=postgres
      - DB_PORT=5432
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "200MB"
  
  library-backend:
    container_name: library-backend
    build: ./library-backend/
    network_mode: host
    ports:
      - "8080:8080"
    environment:
      - DB_ACL_HOST=localhost
      - DB_ACL_PORT=50051
    depends_on:
      - database-acl
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "200MB"
